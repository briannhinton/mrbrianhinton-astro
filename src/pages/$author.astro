---
import MainHead from '../components/MainHead.astro';
import Nav from '../components/Nav.astro';
import NoteCard from '../components/NoteCard.astro';
import Pagination from '../components/Pagination.astro';

// page
let title = 'Don’s Blog';
let description = 'An example blog on Astro';
let canonicalURL = Astro.request.canonicalURL;

// collection
import authorData from '../data/authors.json';
let { collection } = Astro.props;
export async function createCollection() {
  /** Load Notes */
  let allNotes = Astro.fetchContent('./note/*.md');
  let allAuthors = new Set();

  /** Loop through all Notes, gather all authors */
  let routes = [];
  for (const note of allNotes) {
    if (!allAuthors.has(note.author)) {
      allAuthors.add(note.author);
      routes.push({ author: note.author });
    }
  }

  return {
    /** Sort Notes newest -> oldest, filter by params.author */
    async data({ params }) {
      allNotes.sort((a, b) => new Date(b.date) - new Date(a.date));
      return allNotes.filter((note) => note.author === params.author);
    },
    /** Set page size */
    pageSize: 3,
    /** Set permalink URL */
    permalink: ({ params }) => `/author/${params.author}`,
    /** Pass back all routes so Astro can generate the static build */
    routes,
  };
}

const author = authorData[collection.params.author];
---

<html>
  <head>
    <title>{title}</title>
    <MainHead
      title={title}
      description={description}
      image={collection.data[0].image}
      canonicalURL={canonicalURL}
      prev={collection.url.prev}
      next={collection.url.next}
    />

    <style lang="scss">
      .title {
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 3em;
        letter-spacing: -0.04em;
        margin-top: 2rem;
        margin-bottom: 0;
      }

      .avatar {
        width: 1em;
        height: 1em;
        margin-right: 0.5em;
        border-radius: 50%;
        overflow:hidden;

        &-img {
          display: block;
          width: 100%;
          height: 100%;
          object-fit: cover;
        }
      }

      .count {
        font-size: 1em;
        display: block;
        text-align: center;
      }
    </style>
  </head>

  <body>
    <Nav title={title} />

    <main class="wrapper">
      <h2 class="title">
        <div class="avatar"><img class="avatar-img" src={author.image} alt=""}></div>
        {author.name}
      </h2>
      <small class="count">{collection.start + 1}–{collection.end + 1} of {collection.total}</small>
      {collection.data.map((note) => <NoteCard note={note} author={author} />)}
    </main>

    <footer>
      <Pagination prevUrl={collection.url.prev} nextUrl={collection.url.next} />
    </footer>
  </body>
</html>
